.\" Extracted by src2man from reduce.c
.\" Text automatically generated by txt2man
.TH s16_reduce 3m "06 January 2019" "s16math" "s16math Programmer Manual"
.SH NAME
\fBs16_reduce \fP- reduction of terms
.SH SYNOPSIS
.nf
.fam C
#include "s16math.h" s16 \fBs16_reduce\fP(qm_n \fIk\fP);
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Computes reduction of terms for \fIk\fP to unit integer (UI) - either 100
(decimal resolution) or 128 (Q8.7 resolution). Evaluates fractional
part of \fIk\fP for \fIk\fP/UI=\fIx\fP/\fIy\fP for \fIx\fP and \fIy\fP.
.PP
Resolution of reduced fractions is constrained by using \fRa\fP reduction
table to obtain manageable values for power/root calculations. This
approximates the fractional part of the index to the greatest multiple
of 1/4 <= \fIk\fP.
.SH PARAMETER
.TP
.B
\fIk\fP
16 bit signed fixed point number with two decimal digits or seven bits
of resolution.
.SH RETURN
\fIx\fP and \fIy\fP are packed as two signed bytes into a 16 bit signed
integer. \fIx\fP is returned in bit 15:8, and \fIy\fP is returned in
bits 7:0. To be used in fixed point operations, both \fIx\fP and \fIy\fP
must be scaled by the unit integer.
.PP
The function returns zero in bits 15:8 and one in bits 7:0 if \fIk\fP is zero
or not less than the unit integer.
.SH SEE ALSO
.SS yahoo questions
http://answers.yahoo.com/question/index?qid=20080925090511AACvULa
.SH FILE
reduce.c
