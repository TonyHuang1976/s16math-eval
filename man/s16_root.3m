.\" Extracted by src2man from root.c
.\" Text automatically generated by txt2man
.TH s16_root 3m "27 January 2019" "s16math" "s16math Programmer Manual"
.SH NAME
\fBs16_root \fP- evaluate root
.SH SYNOPSIS
.nf
.fam C
#include "s16math.h" qm_n \fBs16_root\fP(qm_n \fIa\fP, qm_n \fIn\fP);
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Evaluate \fIa\fP^(1/\fIn\fP) and return principal root.
.PP
Fractional values of the index \fIn\fP are evaluated by applying successive
exponential identities to simplify them into \fRa\fP set of integer
valued power and root operations of acceptable degree. Fractional indices
are constrained to the greatest multiple of 1/4 <= \fIn\fP
.PP
Accuracy is good for radicands with integer valued indices and for
fractional indices that reduce to multiples of 1/2 (e.g. 0.5, 4.5).
Fractional indices less than one that reduce to multiples of 1/4 - e.g.
0.25, 0.75 - produce accurate roots for indices in the range 0 - 4.00
inclusive.
.PP
Values for index \fIn\fP < 0.25 are truncated to 0.
.SH PARAMETERS
Parameters are supplied as 16 bit integers having an implied binary point
with 7 bits of resolution, or an implied decimal point with two digits
of resolution.
.TP
.B
\fIa\fP
number to find root of - i.e. radicand.
.TP
.B
\fIn\fP
degree of root to be found - i.e. index.
.SH RETURN
The root is returned as \fRa\fP 16 bit integer having an implied binary
point with 7 bits of resolution, or an implied decimal point with two
digits of resolution.
.PP
If \fRa negative radicand is specified with an even index, the function
returns zero to indicate overflow (i.e. the root is imaginary). A negative
radicand with an odd index produces \fRa negative valued root.
.SH NOTES
Internal 32 bit intermediate results.
.PP
Calculators vary in handling roots of negative numbers. The funcs.bc
package [8] issues an error message followed by \fRa zero when an even
integer valued root of \fRa negative number is requested. The Debian
calculate-gtk desktop calculator package returns \fRa complex number.
\fBs16_root\fP() follows funcs.bc practice, except that no message is issued.
.PP
A 16 bit radicand with \fRa value of 0x8000 - 327.68 (decimal) or 256.000
(binary) - is deemed to be \fRa negative number. In this case, the function
always returns 0 to indicate overflow.
.PP
For odd integer valued roots of negative numbers, \fBs16_root\fP() and both
of those packages return the negative of the root of the corresponding
positive number.
.SH SEE ALSO
.SS [1] Binary numeral system
http://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Binary_numeral_system_.28base_2.29
.SS [2] Integer square root
http://en.wikipedia.org/wiki/Integer_square_root
.SS [3] Bisection method
http://en.wikipedia.org/wiki/Bisection_method
.SS [4] Jarvis, Frazer, "Square roots by subtraction"
http://www.afjarvis.staff.shef.ac.uk/maths/jarvisspec02.pdf
.SS [5] Nth root algorithm
http://en.wikipedia.org/wiki/Nth_root_algorithm
.SS [6] GNU MP 5.1.2
http://gmplib.org/manual/index.html#Top
.SS [7] Using Exponents in Algebra - Negative Exponents
http://www.mathsisfun.com/algebra/exponents-using.html
.SS [8] ::phodd.net::GNU bc programming::
http://phodd.net/gnu-bc/
.SS [9] Failure of the method to converge to the root
https://en.wikipedia.org/wiki/Newton%27s_method#Failure_of_the_method_to_converge_to_the_root
.SS [10] Numerical Recipes in C
http://www2.units.it/ipl/students_area/imm2/files/Numerical_Recipes.pdf
.PP
Surveys variety of numerical methods including root finding algorithms
and initial value selection.
.SH FILE
root.c
