." Extracted by src2man from rootof.c
.\"Text automatically generated by txt2man
.TH s16_root 3m "19 July 2015" "s16math" "s16math Programmer Manual"
.SH NAME
\fBs16_root \fP- evaluate root
.SH SYNOPSIS
.nf
.fam C
#include "s16math.h"
qm_n \fBs16_root\fP(qm_n \fIa\fP, qm_n \fIn\fP);
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Evaluate \fIa\fP^(1/\fIn\fP) and return principal root.
.PP
Fractional operands are evaluated by applying successive exponential
identities to simplify them into \fRa\fP set of integer valued power and
root operations of acceptable degree.
.PP
The resolution of fractional exponents is constrained by using \fRa\fP
reduction table to obtain manageable values for power/root calculations.
This approximates the fractional part of the index to the nearest
1/16'th value when binary resolution is used and the nearest 1/10'th value
when decimal resolution is used.
.PP
Accuracy is good for radicands with integer valued indices and for
fractional indices that reduce to integer multiples of 1/2. e.g. 0.5,
4.5. Fractional indices less than one that reduce to integer multiples
of 1/8 - e.g. 0.125, 0.625 - produce accurate roots for indices in the
range 0.25 - 4.00 inclusive.
.PP
Fractional indices greater than 0 but less than 0.25 cause inaccurate
results, as do indices that reduce to any odd multiple of 1/16.
.SH PARAMETERS
Parameters are supplied as 16 bit integers having an implied binary point
with 7 bits of resolution, or an implied decimal point with two digits
of resolution.
.TP
.B
\fIa\fP
number to find root of i.e. radicand.
.TP
.B
\fIn\fP
root to be found - i.e. index.
.SH RETURN
The root is returned as \fRa\fP 16 bit integer having an implied binary
point with 7 bits of resolution, or an implied decimal point with two
digits of resolution.
.PP
If an even root of \fRa negative number is requested, the function returns
zero. Otherwise the function returns \fRa negative root [8].
.SH NOTES
Internal 32 bit intermediate results.
.PP
Calculators vary in handling roots of negative numbers. The funcs.bc
package [8] issues an error message followed by \fRa zero when an even
integer valued root of \fRa negative number is requested. The Debian
calculate-gtk desktop calculator package returns \fRa complex number.
This function follows funcs.bc practice.
.PP
For odd integer valued roots of negative numbers, both of those packages
return the negative of the root of the corresponding positive number, as
does this function.
.SH SEE ALSO
.SS [1] Binary numeral system
http://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Binary_numeral_system_.28base_2.29
.SS [2] Integer square root
http://en.wikipedia.org/wiki/Integer_square_root
.SS [3] Bisection method
http://en.wikipedia.org/wiki/Bisection_method
.SS [4] Jarvis, Frazer, "Square roots by subtraction"
http://www.afjarvis.staff.shef.ac.uk/maths/jarvisspec02.pdf
.SS [5] Nth root algorithm
http://en.wikipedia.org/wiki/Nth_root_algorithm
.SS [6] GNU MP 5.1.2
http://gmplib.org/manual/index.html#Top
.SS [7] Using Exponents in Algebra - Negative Exponents
http://www.mathsisfun.com/algebra/exponents-using.html
.SS [8] ::phodd.net::GNU bc programming::
http://phodd.net/gnu-bc/
.SS [9] Failure of the method to converge to the root
https://en.wikipedia.org/wiki/Newton%27s_method#Failure_of_the_method_to_converge_to_the_root
.SH FILE
rootof.c
